//Player movement
key_left = keyboard_check(ord("A"));
key_right = keyboard_check(ord("D"));
key_jump = keyboard_check_pressed(ord("W"));

var move = key_right - key_left;
hsp = move * walkspeed;
vsp = vsp + grv;

if(move > 0) {
	sprite_index = spr_gompei_run_right;
	image_speed = 1;
	idle_direction = 1;
} else if(move < 0) {
	sprite_index = spr_gompei_run_left;
	image_speed = 1;
	idle_direction = 0;
} else if (idle_direction == 1) {
	sprite_index = spr_gompei_idle_right;
	image_speed = 1;
} else {
	sprite_index = spr_gompei_idle_left;
	image_speed = 1;
}

//Jump
if(place_meeting(x,y+1,obj_barrier)) && (key_jump) {
	vsp = -19;
}

//Horizontal collision with barrier
if(place_meeting(x+hsp,y,obj_barrier)) {
	while(!place_meeting(x+sign(hsp),y,obj_barrier)) {
		x = x + sign(hsp);
	}
	hsp = 0;
}
x = x + hsp;

//Vertical Collision with barrier
if(place_meeting(x,y+vsp,obj_barrier)) {
	while(!place_meeting(x,y+sign(vsp),obj_barrier)) {
		y = y + sign(vsp);
	}
	vsp = 0;
}
y=y+vsp;

//Enemy Collision
if (place_meeting(x,y+vsp,obj_enemy_walking)) || (place_meeting(x+hsp,y,obj_enemy_walking)) {
	global.lives -= 1;
	if(global.lives > 0) {
		room_goto(Life_Lost);
	} else {
		room_goto(Game_Over);
	}
}
